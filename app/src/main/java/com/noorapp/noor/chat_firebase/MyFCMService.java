package com.noorapp.noor.chat_firebase;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.Context;import android.content.Intent;import android.media.RingtoneManager;import android.net.Uri;import android.support.v4.app.NotificationCompat;import android.util.Log;import android.widget.Toast;import com.google.firebase.messaging.FirebaseMessagingService;import com.google.firebase.messaging.RemoteMessage;import com.noorapp.noor.MainActivity;import com.noorapp.noor.R;import com.noorapp.noor.models.ChatModel.Message;import org.json.JSONException;import org.json.JSONObject;import java.util.Map;public class MyFCMService extends FirebaseMessagingService {    @Override    public void onMessageReceived(RemoteMessage remoteMessage) {        super.onMessageReceived(remoteMessage);        Log.d("responsenotification", String.valueOf(remoteMessage.getData()));        // sendNotification(remoteMessage.getData().get("title"), remoteMessage.getData().get("message"));.getNotification().getBody()        sendNotification(remoteMessage.getNotification().getTitle(), remoteMessage.getNotification().getBody());//        Toast.makeText(this, remoteMessage.getData().get("message"), Toast.LENGTH_SHORT).show();        Log.e("mmmmmme", remoteMessage.getData().get("chat_id"));        Log.e("mmmmmm1", remoteMessage.getData().get("type"));        Log.e("mmmmmm2", remoteMessage.getData().get("message"));        if (remoteMessage.getData().size() > 0) {            // get values from data that sent from php by fcm            Log.e("message content", remoteMessage.getData().get("message"));            String messageContent = remoteMessage.getData().get("message");            String userId = remoteMessage.getData().get("chat_id");            String messageType = remoteMessage.getData().get("type");            // String timestamp = remoteMessage.getData().get("timestamp");            // Create new message and assign value to it            Message message = new Message();            message.setContent(messageContent);            message.setUserId(userId);            message.setType(messageType);            // message.setTimestamp(timestamp);            // app is forground and user see it now send broadcast to update chat            // you can send broadcast to do anything if you want !            Intent intent = new Intent("UpdateChateActivity");            intent.putExtra("msg", message);            sendBroadcast(intent);        }    }    private void sendNotification(String title, String messageBody) {        Intent intent = new Intent(this, MainActivity.class);        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0 /* Request code */, intent,                PendingIntent.FLAG_ONE_SHOT);        Uri defaultSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this, "0")                .setSmallIcon(R.drawable.gudiicon)                .setContentTitle(title)                .setContentText(messageBody)                .setAutoCancel(true)                .setSound(defaultSoundUri)                .setContentIntent(pendingIntent);        NotificationManager notificationManager =                (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);        notificationManager.notify(0 /* ID of notification */, notificationBuilder.build());    }}