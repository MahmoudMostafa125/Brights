package com.noorapp.noor.adapter;import android.content.Context;import android.content.Intent;import android.support.annotation.NonNull;import android.support.v4.content.ContextCompat;import android.support.v7.widget.RecyclerView;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.TextView;import android.widget.Toast;import com.noorapp.noor.Constants;import com.noorapp.noor.R;import com.noorapp.noor.Trips_Activity;import com.noorapp.noor.models.TransportationModel.Transportation;import com.noorapp.noor.models.TripModel.Trip;import com.squareup.picasso.Picasso;import java.util.List;import static com.noorapp.noor.Book_Date_Activity.CarID;import static com.noorapp.noor.Book_Date_Activity.carm;import static com.noorapp.noor.Book_Date_Activity.mkecarp;public class CarsRentAdapter extends RecyclerView.Adapter<CarsRentAdapter.FilmsViewHolder> {    private Context mCtx;    private List<Trip> placeList;    private List<Boolean> placeListboolean;    private static String id = null;    private static String price = null;    public CarsRentAdapter(Context mCtx, List<Trip> filmList, List<Boolean> tripswithounull) {        this.mCtx = mCtx;        this.placeList = filmList;        this.placeListboolean = tripswithounull;    }    @NonNull    @Override    public CarsRentAdapter.FilmsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.car_rent_card, parent, false);        return new CarsRentAdapter.FilmsViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull final CarsRentAdapter.FilmsViewHolder holder, final int position) {        final Trip results = placeList.get(position);        if (!results.getTranslations().isEmpty()) {            if (results.getTranslations().get(0).getName() != null) {                holder.title.setText(results.getTranslations().get(0).getName());            }            if (!results.getCurrency().getTranslations().isEmpty()) {                if (results.getCurrency().getTranslations().get(0).getIso() != null) {                    holder.price.setText(results.getPrice() + " " + results.getCurrency().getTranslations().get(0).getIso());                }            }            if (!results.getImages().isEmpty()) {                if (results.getImages().get(0).getPath() != null) {                    Picasso.with(mCtx)                            .load(Constants.mainLink + results.getImages().get(0).getPath())                            .placeholder(R.drawable.placeholder)                            .error(R.drawable.placeholder)                            .into(holder.img);                } else if (results.getImages().get(0).getLink() != null) {                    Picasso.with(mCtx)                            .load(results.getImages().get(0).getLink())                            .placeholder(R.drawable.placeholder)                            .error(R.drawable.placeholder)                            .into(holder.img);                } else {                    Picasso.with(mCtx)                            .load(Constants.mainLink + results.getImages().get(0).getPath())                            .placeholder(R.drawable.placeholder)                            .error(R.drawable.placeholder)                            .into(holder.img);                }            }            if (placeListboolean.get(position)) {                holder.view.setBackground(ContextCompat.getDrawable(mCtx, R.drawable.bg_calender));            } else {                holder.view.setBackground(ContextCompat.getDrawable(mCtx, R.drawable.rounded));            }            holder.img.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    if (placeListboolean.get(position) == false) {                        id = String.valueOf(results.getId());                        price = results.getPrice();                        placeListboolean.set(position, true);                        for (int i = 0; i < placeList.size(); i++) {                            if (i != position) {                                placeListboolean.set(i, false);                            }                        }                        notifyDataSetChanged();                        carm = price;                        CarID = id;                        mkecarp(carm, carm + " " + results.getCurrency().getTranslations().get(0).getIso());                    } else {                        placeListboolean.set(position, false);                        id = null;                        price = null;                        notifyDataSetChanged();                        carm = "0";                        CarID = "0";                        mkecarp(carm, carm + " " + results.getCurrency().getTranslations().get(0).getIso());                    }                }            });        }    }    @Override    public int getItemCount() {        return placeList.size();    }    public class FilmsViewHolder extends RecyclerView.ViewHolder {        TextView title, price;        ImageView img;        LinearLayout cardView;        View view;        public FilmsViewHolder(View itemview) {            super(itemview);            title = itemView.findViewById(R.id.titleplace2);            price = itemView.findViewById(R.id.titleplace);            img = itemView.findViewById(R.id.image1);            cardView = itemView.findViewById(R.id.lin);            view = itemview.findViewById(R.id.viewcheck);        }    }    public static String getprice() {        return price;    }    public static String getid() {        return id;    }    public static void setprice(String pricestr) {        price = pricestr;    }    public static void setid(String strID) {        id = strID;    }}