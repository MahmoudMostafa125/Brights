package com.noorapp.noor.adapter;import android.content.Context;import android.graphics.Color;import android.support.annotation.NonNull;import android.support.v7.widget.CardView;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.noorapp.noor.R;import com.noorapp.noor.models.CategoryFilterModel;import com.noorapp.noor.models.CategoryModel.Category;import com.noorapp.noor.models.GuideModel.Place;import com.noorapp.noor.models.PlaceFilterModel;import java.util.ArrayList;import java.util.List;import static com.noorapp.noor.Discover_frag.filterList;import static com.noorapp.noor.Guide_Places_Activity.filterList2;public class CategoryFilterAdaptercard extends RecyclerView.Adapter<CategoryFilterAdaptercard.FilmsViewHolder> {    private Context mCtx;    private List<CategoryFilterModel> placeList;    private List<Place> placesList;    public static List<String> filtercheck;    public CategoryFilterAdaptercard(Context mCtx, List<CategoryFilterModel> filmList, List<Place> placesList) {        this.mCtx = mCtx;        this.placeList = filmList;        this.placesList = placesList;        filtercheck = new ArrayList<>();    }    @NonNull    @Override    public FilmsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.filter_card, parent, false);        return new FilmsViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull final FilmsViewHolder holder, int position) {        final CategoryFilterModel results = placeList.get(position);        if (!results.getName().isEmpty()) {            holder.title.setText(results.getName());            holder.cardView.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View v) {                    if (results.isExist() == false) {                        holder.cardView.setCardBackgroundColor(Color.parseColor("#e9ab3d"));                        results.setExist(true);                        filtercheck.add(results.getId());                        if (!placeList.isEmpty()) {                            filterList2(filtercheck, placesList);                        }                    } else {                        holder.cardView.setCardBackgroundColor(Color.parseColor("#FFFFFF"));                        results.setExist(false);                        filtercheck.remove(results.getId());                        if (!placeList.isEmpty()) {                            filterList2(filtercheck, placesList);                        }                    }                }            });        }    }    @Override    public int getItemCount() {        return placeList.size();    }    @Override    public int getItemViewType(int position) {        return position;    }    public class FilmsViewHolder extends RecyclerView.ViewHolder {        TextView title;        CardView cardView;        public FilmsViewHolder(View itemview) {            super(itemview);            title = itemView.findViewById(R.id.stadtxt);            cardView = itemView.findViewById(R.id.stad);        }    }}